
==========================================================================
==========================================================================
==========================================================================
==========================================================================
Buttons to choose different child VCs:
https://spin.atomicobject.com/2015/10/13/switching-child-view-controllers-ios-auto-layout/

==========================================================================
Switching VCs:

* swift 3 with storyboard:
let storyBoard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil)
let secondVC = storyBoard.instantiateViewController(withIdentifier: "secondVC")
self.present(mainVC, animated: true, completion: nil)

==========================================================================

//George Yang: Posts about iOS programming:  https://flipboard.com/@asceticmonk/ios-programming-av6pibtqy
==========================================================================
// Sample codes to show the difference between class and static and final properties inside class
class A{
    class func classFunction(){
    }
    static func staticFunction(){
    }
    class func classFunctionToBeMakeFinalInImmediateSubclass(){
    }
}

class B: A {
    override class func classFunction(){

    }

    //Compile Error. Class method overrides a 'final' class method
    override static func staticFunction(){

    }

    //Lets avoid the function called 'classFunctionToBeMakeFinalInImmediateSubclass' being overriden by subclasses

    /* First way of doing it
    override static func classFunctionToBeMakeFinalInImmediateSubclass(){
    }
    */

    // Second way of doing the same
    override final class func classFunctionToBeMakeFinalInImmediateSubclass(){
    }

    //To use static or final class is choice of style.
    //As mipadi suggests I would use. static at super class. and final class to cut off further overrides by a subclass
}

class C: B{
    //Compile Error. Class method overrides a 'final' class method
    override static func classFunctionToBeMakeFinalInImmediateSubclass(){

    }
}

// class can be used to define type properties of computed type only. If you need a stored type property use static instead.
// You define type properties with the static keyword. For computed type properties for class types, 
you can use the class keyword instead to allow subclasses to override the superclassâ€™s implementation."
==========================================================================